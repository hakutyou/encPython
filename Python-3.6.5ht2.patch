diff -uprN Python-3.6.5-encrypt-2/Include/Python.h Python-3.6.5-encrypt-3/Include/Python.h
--- Python-3.6.5-encrypt-2/Include/Python.h	2019-07-13 10:32:58.833875335 +0800
+++ Python-3.6.5-encrypt-3/Include/Python.h	2019-07-13 17:34:23.917875335 +0800
@@ -3,6 +3,7 @@
 /* Since this is a "meta-include" file, no #ifdef __cplusplus / extern "C" { */
 
 // #define HAKUTYOU_DEBUG
+#define AES_KEY "packerpacker"
 
 /* Include nearly all Python header files */
 
diff -uprN Python-3.6.5-encrypt-2/Python/fileutils.c Python-3.6.5-encrypt-3/Python/fileutils.c
--- Python-3.6.5-encrypt-2/Python/fileutils.c	2019-07-13 10:26:12.550875335 +0800
+++ Python-3.6.5-encrypt-3/Python/fileutils.c	2019-07-13 19:00:12.614875335 +0800
@@ -1111,14 +1111,19 @@ FILE *read_encrypt_fp(FILE *fp, char *na
     if (NULL == fp)
         return fp;
     else {
-        int c = fgetc(fp);
-        if (c == '&') {    // 魔法数字
-                fclose(fp);
-            char command[256];
-            sprintf(command, "cat %s | sed '1 s/^.//' | base64 -d", name);
+        char command[512];
+        switch (fgetc(fp)) {
+        case '&':  // 魔法数字
+            fclose(fp);
+            sprintf(command, "cat %s | sed '1s/^.//' | base64 -d", name);
             fp = popen(command, "r");
-            return fp;
-        } else {
+            break;
+        case '*': // AES256
+            fclose(fp);
+            sprintf(command, "cat %s | sed '1s/^.//' | gpg2 --decrypt --batch --yes --passphrase='" AES_KEY "' 2> /dev/null", name);
+            fp = popen(command, "r");
+            break;
+        default:
             fseek(fp, 0, SEEK_SET);
         }
     }
